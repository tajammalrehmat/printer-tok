# Generated by the protocol buffer compiler.  DO NOT EDIT!
# sources: data.proto, enums.proto, webcast.proto
# plugin: python-betterproto
# This file has been @generated
import builtins
from dataclasses import dataclass
from typing import (
    Dict,
    List,
)

import betterproto


class AuditStatus(betterproto.Enum):
    AUDITSTATUSUNKNOWN = 0
    AUDITSTATUSPASS = 1
    AUDITSTATUSFAILED = 2
    AUDITSTATUSREVIEWING = 3
    AUDITSTATUSFORBIDDEN = 4


class EmoteType(betterproto.Enum):
    EMOTETYPENORMAL = 0
    EMOTETYPEWITHSTICKER = 1


class ContentSource(betterproto.Enum):
    CONTENTSOURCEUNKNOWN = 0
    CONTENTSOURCENORMAL = 1
    CONTENTSOURCECAMERA = 2


class EmotePrivateType(betterproto.Enum):
    NORMAL = 0
    SUB_WAVE = 1


class TextType(betterproto.Enum):
    DISPLAY_TEXT = 0
    CONTENT = 1


class LinkmicApplierSortSetting(betterproto.Enum):
    NONE = 0
    BY_GIFT_SCORE = 1


class LinkMicBattleStatus(betterproto.Enum):
    BATTLE_ARMY_UNKNOWN = 0
    ARMY_ONGOING = 1
    ARMY_FINISHED = 2
    BATTLE_ONGOING = 4
    BATTLE_FINISHED = 5


class HashtagNamespace(betterproto.Enum):
    GLOBAL = 0
    GAMING = 1


class AgreeStatus(betterproto.Enum):
    AGREE_UNKNOWN = 0
    AGREE = 1
    REJECT = 2


class KickoutReason(betterproto.Enum):
    UNKNOWN = 0
    FIRST_FRAME_TIMEOUT = 1
    BY_HOST = 2
    RTC_LOST_CONNECTION = 3
    BY_PUNISH = 4
    BY_ADMIN = 5
    HOST_REMOVE_ALL_GUESTS = 6


class GroupStatus(betterproto.Enum):
    UNKNOWN = 0
    WAITING = 1
    LINKED = 3


class BusinessCase(betterproto.Enum):
    BUSINESS_NOT_SET = 0
    APPLY_BIZ_CONTENT = 1
    INVITE_BIZ_CONTENT = 2
    REPLY_BIZ_CONTENT = 3
    PERMIT_BIZ_CONTENT = 4
    JOIN_DIRECT_BIZ_CONTENT = 5
    KICK_OUT_BIZ_CONTENT = 6
    LIST_CHANGE_BIZ_CONTENT = 11
    MULTI_LIVE_CONTENT = 100
    COHOST_CONTENT = 200


class ReplyStatus(betterproto.Enum):
    UNKNOWN = 0
    AGREE = 1
    REFUSE_PERSONALLY = 2
    REFUSE_TYPE_NOT_SUPPORT = 3
    REFUSE_PROCESSING_INVITATION = 4
    REFUSE_BY_TIMEOUT = 5
    REFUSE_EXCEPTION = 6
    REFUSE_SYSTEM_NOT_SUPPORTED = 7
    REFUSE_SUBTYPE_DIFFERENCE = 8
    REFUSE_IN_MICROOM = 9
    REFUSE_NOT_LOAD_PLUGIN = 10
    REFUSE_IN_MULTI_GUEST = 11
    REFUSE_PAUSE_LIVE = 12
    REFUSE_OPEN_CAMERA_DIALOG_SHOWING = 13
    REFUSE_DRAW_GUESSING = 14
    REFUSE_RANDOM_MATCHING = 15
    REFUSE_IN_MATCH_PROCESSING = 16
    REFUSE_IN_MICROOM_FOR_MULTI_COHOST = 17
    REFUSE_COHOST_FINISHED = 18
    REFUSE_NOT_CONNECTED = 19
    REFUSE_LINKMIC_FULL = 20
    REFUSE_ARC_INCOMPATIBLE = 21
    REFUSE_PROCESSING_OTHER_INVITE = 22
    REFUSE_PROCESSING_OTHER_APPLY = 23
    REFUSE_IN_ANCHOR_COHOST = 24
    REFUSE_TOPIC_PAIRING = 25


class SubscribeType(betterproto.Enum):
    SUBSCRIBETYPE_ONCE = 0
    SUBSCRIBETYPE_AUTO = 1
    SUBSCRIBETYPE_DEFAULT = 100


class OldSubscribeStatus(betterproto.Enum):
    OLDSUBSCRIBESTATUS_FIRST = 0
    OLDSUBSCRIBESTATUS_RESUB = 1
    OLDSUBSCRIBESTATUS_SUBINGRACEPERIOD = 2
    OLDSUBSCRIBESTATUS_SUBNOTINGRACEPERIOD = 3
    OLDSUBSCRIBESTATUS_DEFAULT = 100


class SubscribingStatus(betterproto.Enum):
    SUBSCRIBINGSTATUS_UNKNOWN = 0
    SUBSCRIBINGSTATUS_ONCE = 1
    SUBSCRIBINGSTATUS_CIRCLE = 2
    SUBSCRIBINGSTATUS_CIRCLECANCEL = 3
    SUBSCRIBINGSTATUS_REFUND = 4
    SUBSCRIBINGSTATUS_INGRACEPERIOD = 5
    SUBSCRIBINGSTATUS_NOTINGRACEPERIOD = 6


class LinkmicStatus(betterproto.Enum):
    Disable = 0
    Enable = 1
    Just_Following = 2
    Multi_Linking = 3
    Multi_Linking_Only_Following = 4


class MemberMessageAction(betterproto.Enum):
    UNKNOWN = 0
    JOINED = 1
    SUBSCRIBED = 3


class ControlAction(betterproto.Enum):
    ControlActionUNKNOWN = 0
    STREAM_PAUSED = 1
    STREAM_UNPAUSED = 2
    STREAM_ENDED = 3
    STREAM_SUSPENDED = 4


class LinkLayerMessageType(betterproto.Enum):
    Linker_Unknown = 0
    Linker_Create = 1
    Linker_Invite = 2
    Linker_Apply = 3
    Linker_Permit = 4
    Linker_Reply = 5
    Linker_Kick_Out = 6
    Linker_Cancel_Apply = 7
    Linker_Cancel_Invite = 8
    Linker_Leave = 9
    Linker_Finish = 10
    Linker_List_Change = 11
    Linker_Join_Direct = 12
    Linker_Join_Group = 13
    Linker_Permit_Group = 14
    Linker_Cancel_Group = 15
    Linker_Leave_Group = 16
    Linker_P2P_Group_Change = 17
    Linker_Group_Change = 18


class BarrageType(betterproto.Enum):
    BarrageType_Unknown = 0
    EComOrdering = 1
    EComBuying = 2
    Normal = 3
    Subscribe = 4
    EventView = 5
    EventRegistered = 6
    SubscribeGift = 7
    UserUpgrade = 8
    GradeUserEntranceNotification = 9
    FansLevelUpgrade = 10
    FansLevelEntrance = 11
    GamePartnership = 12


class EnvelopeBusinessType(betterproto.Enum):
    BusinessTypeUnknown = 0
    BusinessTypeUserDiamond = 1
    BusinessTypePlatformDiamond = 2
    BusinessTypePlatformShell = 3
    BusinessTypePortal = 4
    BusinessTypePlatformMerch = 5
    BusinessTypeEoYDiamond = 6
    BusinessTypeFanClubGtM = 7


class EnvelopeFollowShowStatus(betterproto.Enum):
    EnvelopeFollowShowUnknown = 0
    EnvelopeFollowShow = 1
    EnvelopeFollowNotShow = 2


class EnvelopeDisplay(betterproto.Enum):
    EnvelopeDisplayUnknown = 0
    EnvelopeDisplayNew = 1
    EnvelopeDisplayHide = 2


class CommonContentCase(betterproto.Enum):
    COMMON_CONTENT_NOT_SET = 0
    CREATE_CHANNEL_CONTENT = 100
    LIST_CHANGE_CONTENT = 102
    INVITE_CONTENT = 103
    APPLY_CONTENT = 104
    PERMIT_APPLY_CONTENT = 105
    REPLY_INVITE_CONTENT = 106
    KICK_OUT_CONTENT = 107
    CANCEL_APPLY_CONTENT = 108
    CANCEL_INVITE_CONTENT = 109
    LEAVE_CONTENT = 110
    FINISH_CONTENT = 111
    JOIN_DIRECT_CONTENT = 112
    JOIN_GROUP_CONTENT = 113
    PERMIT_GROUP_CONTENT = 114
    CANCEL_GROUP_CONTENT = 115
    LEAVE_GROUP_CONTENT = 116
    P2P_GROUP_CHANGE_CONTENT = 117
    GROUP_CHANGE_CONTENT = 118


class LinkMessageType(betterproto.Enum):
    TYPE_LINKER_UNKNOWN = 0
    TYPE_LINKER_CREATE = 1
    TYPE_LINKER_CLOSE = 2
    TYPE_LINKER_INVITE = 3
    TYPE_LINKER_APPLY = 4
    TYPE_LINKER_REPLY = 5
    TYPE_LINKER_ENTER = 6
    TYPE_LINKER_LEAVE = 7
    TYPE_LINKER_PERMIT = 8
    TYPE_LINKER_CANCEL_INVITE = 9
    TYPE_LINKER_WAITING_LIST_CHANGE = 10
    TYPE_LINKER_LINKED_LIST_CHANGE = 11
    TYPE_LINKER_UPDATE_USER = 12
    TYPE_LINKER_KICK_OUT = 13
    TYPE_LINKER_CANCEL_APPLY = 14
    TYPE_LINKER_MUTE = 15
    TYPE_LINKER_MATCH = 16
    TYPE_LINKER_UPDATE_USER_SETTING = 17
    TYPE_LINKER_MIC_IDX_UPDATE = 18
    TYPE_LINKER_LEAVE_V2 = 19
    TYPE_LINKER_WAITING_LIST_CHANGE_V2 = 20
    TYPE_LINKER_LINKED_LIST_CHANGE_V2 = 21
    TYPE_LINKER_COHOST_LIST_CHANGE = 22
    TYPE_LINKER_MEDIA_CHANGE = 23
    TYPE_LINKER_ACCEPT_NOTICE = 24
    TYPE_LINKER_SYS_KICK_OUT = 101
    TYPE_LINKMIC_USER_TOAST = 102


class MessageType(betterproto.Enum):
    MESSAGETYPE_SUBSUCCESS = 0
    MESSAGETYPE_ANCHORREMINDER = 1
    MESSAGETYPE_ENTERROOMEXPIRESOON = 2
    MESSAGETYPE_SUBGOALCREATETOANCHOR = 3
    MESSAGETYPE_SUBGOALCOMPLETETOAUDIENCE = 4
    MESSAGETYPE_SUBGOALCOMPLETETOANCHOR = 5
    MESSAGETYPE_SUBGIFTTIKTOK2USERNOTICE = 6
    MESSAGETYPE_SUBGIFTTIKTOK2ANCHORNOTICE = 7
    MESSAGETYPE_SUBGIFTTRECEIVESENDNOTICE = 8
    MESSAGETYPE_SUBGIFTSENDSUCCEEDROOMMESSAGE = 9
    MESSAGETYPE_SUBGIFTSENDSUCCEEDANCHORNOTICE = 10
    MESSAGETYPE_SUBGIFTLOWVERSIONUPGRADENOTICE = 11
    MESSAGETYPE_SUBGIFTUSERBUYAUTHNOTICE = 12


class Scene(betterproto.Enum):
    UNKNOWN = 0
    CO_HOST = 2
    MULTI_LIVE = 4


class CommonImDispatchStrategy(betterproto.Enum):
    IM_DISPATCH_STRATEGY_DEFAULT = 0
    IM_DISPATCH_STRATEGY_BYPASS_DISPATCH_QUEUE = 1


class BadgeStructDataCase(betterproto.Enum):
    DATA_NOT_SET = 0
    IMAGE = 20
    TEXT = 21
    STR = 22
    COMBINE = 23


class BadgeStructBadgeDisplayType(betterproto.Enum):
    BADGEDISPLAYTYPE_UNKNOWN = 0
    BADGEDISPLAYTYPE_IMAGE = 1
    BADGEDISPLAYTYPE_TEXT = 2
    BADGEDISPLAYTYPE_STRING = 3
    BADGEDISPLAYTYPE_COMBINE = 4


class BadgeStructPosition(betterproto.Enum):
    POSITIONUNKNOWN = 0
    POSITIONLEFT = 1
    POSITIONRIGHT = 2


class UserLiveEventInfoEventPayMethod(betterproto.Enum):
    EVENTPAYMETHODINVALID = 0
    EVENTPAYMETHODCOINS = 1
    EVENTPAYMETHODCASH = 2


class UserEcommerceEntranceCreatorType(betterproto.Enum):
    UNDEFINED = 0
    OFFICIAL = 1
    MARKET = 2
    NORMAL = 3


class UserEcommerceEntranceEntranceType(betterproto.Enum):
    PROFILE = 0
    SHOWCASE = 1
    SHOP = 2


class UserEcommerceEntranceShopEntranceInfoStoreLabelStoreBrandLabelType(
    betterproto.Enum
):
    NONE = 0
    OFFICIAL = 1
    AUTHORIZED = 2
    STORE_BRAND_LABEL_TYPE_BLUE_V = 3
    STORE_BRAND_LABEL_TYPE_TOP_CHOICE = 4


class UserFansClubPreferntialType(betterproto.Enum):
    PRESONALPROFILE = 0
    OTHERROOM = 1


class UserFansClubFansClubDataBadgeIcon(betterproto.Enum):
    UNKNOWN = 0
    ICON = 1
    SMALLICON = 2


class UserFansClubFansClubDataUserFansClubStatus(betterproto.Enum):
    NOTJOINED = 0
    ACTIVE = 1
    INACTIVE = 2


class ListUserLinkType(betterproto.Enum):
    LINK_UNKNOWN = 0
    AUDIO = 1
    VIDEO = 2


class WebcastBarrageMessageBarrageType(betterproto.Enum):
    UNKNOWN = 0
    ECOMORDERING = 1
    ECOMBUYING = 2
    NORMAL = 3
    SUBSCRIBE = 4
    EVENTVIEW = 5
    EVENTREGISTERED = 6
    SUBSCRIBEGIFT = 7
    USERUPGRADE = 8
    GRADEUSERENTRANCENOTIFICATION = 9
    FANSLEVELUPGRADE = 10
    FANSLEVELENTRANCE = 11
    GAMEPARTNERSHIP = 12


@dataclass(eq=False, repr=False)
class Common(betterproto.Message):
    method: str = betterproto.string_field(1)
    msg_id: int = betterproto.int64_field(2)
    room_id: int = betterproto.int64_field(3)
    create_time: int = betterproto.int64_field(4)
    monitor: int = betterproto.int32_field(5)
    is_show_msg: bool = betterproto.bool_field(6)
    describe: str = betterproto.string_field(7)
    display_text: "Text" = betterproto.message_field(8)
    fold_type: int = betterproto.int64_field(9)
    anchor_fold_type: int = betterproto.int64_field(10)
    priority_score: int = betterproto.int64_field(11)
    log_id: str = betterproto.string_field(12)
    msg_process_filter_k: str = betterproto.string_field(13)
    msg_process_filter_v: str = betterproto.string_field(14)
    from_idc: str = betterproto.string_field(15)
    to_idc: str = betterproto.string_field(16)
    filter_msg_tags_list: List[str] = betterproto.string_field(17)
    sei: "CommonLiveMessageSei" = betterproto.message_field(18)
    depend_root_id: "CommonLiveMessageId" = betterproto.message_field(19)
    depend_id: "CommonLiveMessageId" = betterproto.message_field(20)
    anchor_priority_score: int = betterproto.int64_field(21)
    room_message_heat_level: int = betterproto.int64_field(22)
    fold_type_for_web: int = betterproto.int64_field(23)
    anchor_fold_type_for_web: int = betterproto.int64_field(24)
    client_send_time: int = betterproto.int64_field(25)
    dispatch_strategy: "CommonImDispatchStrategy" = betterproto.enum_field(26)


@dataclass(eq=False, repr=False)
class CommonLiveMessageSei(betterproto.Message):
    unique_id: "CommonLiveMessageId" = betterproto.message_field(1)
    timestamp: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class CommonLiveMessageId(betterproto.Message):
    primary_id: str = betterproto.string_field(1)
    message_scene: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class Text(betterproto.Message):
    key: str = betterproto.string_field(1)
    default_pattern: str = betterproto.string_field(2)
    default_format: "TextTextFormat" = betterproto.message_field(3)
    pieces_list: List["TextTextPiece"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TextTextPiece(betterproto.Message):
    type: int = betterproto.int32_field(1)
    format: "TextTextFormat" = betterproto.message_field(2)
    string_value: str = betterproto.string_field(11)
    user_value: "TextTextPieceUser" = betterproto.message_field(
        21, group="textPieceType"
    )
    gift_value: "TextTextPieceGift" = betterproto.message_field(
        22, group="textPieceType"
    )
    pattern_ref_value: "TextTextPiecePatternRef" = betterproto.message_field(24)


@dataclass(eq=False, repr=False)
class TextTextFormat(betterproto.Message):
    color: str = betterproto.string_field(1)
    bold: bool = betterproto.bool_field(2)
    italic: bool = betterproto.bool_field(3)
    weight: int = betterproto.int32_field(4)
    italic_angle: int = betterproto.int32_field(5)
    font_size: int = betterproto.int32_field(6)
    use_heigh_light_color: bool = betterproto.bool_field(7)
    use_remote_clor: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class TextTextPieceGift(betterproto.Message):
    gift_id: int = betterproto.int32_field(1)
    color_id: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class TextTextPiecePatternRef(betterproto.Message):
    key: str = betterproto.string_field(1)
    default_pattern: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class TextTextPieceUser(betterproto.Message):
    user: "User" = betterproto.message_field(1)
    with_colon: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class Image(betterproto.Message):
    url_list: List[str] = betterproto.string_field(1)
    extras: str = betterproto.string_field(2)
    is_animated: bool = betterproto.bool_field(9)


@dataclass(eq=False, repr=False)
class BadgeStruct(betterproto.Message):
    display_type: "BadgeStructBadgeDisplayType" = betterproto.enum_field(1)
    image: "BadgeStructImageBadge" = betterproto.message_field(20, group="badgeType")
    text: "BadgeStructTextBadge" = betterproto.message_field(21, group="badgeType")
    str: "BadgeStructStringBadge" = betterproto.message_field(22, group="badgeType")
    combine: "BadgeStructCombineBadge" = betterproto.message_field(
        23, group="badgeType"
    )


@dataclass(eq=False, repr=False)
class BadgeStructCombineBadge(betterproto.Message):
    icon: "Image" = betterproto.message_field(2)
    text: "BadgeStructTextBadge" = betterproto.message_field(3)
    str: builtins.str = betterproto.string_field(4)
    profile_card_panel: "BadgeStructProfileCardPanel" = betterproto.message_field(7)
    background: "BadgeStructCombineBadgeBackground" = betterproto.message_field(11)
    background_dark_mode: "BadgeStructCombineBadgeBackground" = (
        betterproto.message_field(12)
    )
    icon_auto_mirrored: bool = betterproto.bool_field(13)
    background_auto_mirrored: bool = betterproto.bool_field(14)
    public_screen_show_style: int = betterproto.int32_field(15)
    personal_card_show_style: int = betterproto.int32_field(16)
    ranklist_online_audience_show_style: int = betterproto.int32_field(17)
    multi_guest_show_style: int = betterproto.int32_field(18)


@dataclass(eq=False, repr=False)
class BadgeStructProfileContent(betterproto.Message):
    use_content: bool = betterproto.bool_field(1)
    icon_list: List["BadgeStructIconConfig"] = betterproto.message_field(2)
    number_config: "BadgeStructNumberConfig" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BadgeStructProjectionConfig(betterproto.Message):
    use_projection: bool = betterproto.bool_field(1)
    icon: "Image" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BadgeStructNumberConfig(betterproto.Message):
    number: int = betterproto.int64_field(1)
    background: "BadgeStructCombineBadgeBackground" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BadgeStructProfileCardPanel(betterproto.Message):
    use_new_profile_card_style: bool = betterproto.bool_field(1)
    projection_config: "BadgeStructProjectionConfig" = betterproto.message_field(3)
    profile_content: "BadgeStructProfileContent" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class BadgeStructCombineBadgeBackground(betterproto.Message):
    image: "Image" = betterproto.message_field(1)
    background_color_code: str = betterproto.string_field(2)
    border_color_code: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class BadgeStructImageBadge(betterproto.Message):
    image: "Image" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BadgeStructTextBadge(betterproto.Message):
    default_pattern: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class BadgeStructIconConfig(betterproto.Message):
    icon: "Image" = betterproto.message_field(1)
    background: "BadgeStructCombineBadgeBackground" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BadgeStructStringBadge(betterproto.Message):
    str: builtins.str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class GiftStruct(betterproto.Message):
    image: "Image" = betterproto.message_field(1)
    describe: str = betterproto.string_field(2)
    duration: int = betterproto.int64_field(4)
    id: int = betterproto.int64_field(5)
    for_linkmic: bool = betterproto.bool_field(7)
    combo: bool = betterproto.bool_field(10)
    type: int = betterproto.int32_field(11)
    diamond_count: int = betterproto.int32_field(12)
    is_displayed_on_panel: bool = betterproto.bool_field(13)
    primary_effect_id: int = betterproto.int64_field(14)
    gift_label_icon: "Image" = betterproto.message_field(15)
    name: str = betterproto.string_field(16)
    icon: "Image" = betterproto.message_field(21)
    gold_effect: str = betterproto.string_field(24)
    preview_image: "Image" = betterproto.message_field(47)
    gift_panel_banner: "GiftStructGiftPanelBanner" = betterproto.message_field(48)
    is_broadcast_gift: bool = betterproto.bool_field(49)
    is_effect_befview: bool = betterproto.bool_field(50)
    is_random_gift: bool = betterproto.bool_field(51)
    is_box_gift: bool = betterproto.bool_field(52)
    can_put_in_gift_box: bool = betterproto.bool_field(53)


@dataclass(eq=False, repr=False)
class GiftStructGiftPanelBanner(betterproto.Message):
    display_text: "Text" = betterproto.message_field(1)
    left_icon: "Image" = betterproto.message_field(2)
    schema_url: str = betterproto.string_field(3)
    bg_color_values_list: List[str] = betterproto.string_field(5)
    banner_lynx_url: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class GiftStructGiftRandomEffectInfo(betterproto.Message):
    random_gift_panel_banner: "GiftStructRandomGiftPanelBanner" = (
        betterproto.message_field(1)
    )
    effect_ids_list: List[int] = betterproto.int64_field(2)
    host_key: str = betterproto.string_field(3)
    audience_key: str = betterproto.string_field(4)
    random_gift_bubble: "GiftStructRandomGiftBubble" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class GiftStructRandomGiftBubble(betterproto.Message):
    display_text: str = betterproto.string_field(1)
    icon_dynamic_effect: "Image" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GiftStructRandomGiftPanelBanner(betterproto.Message):
    bg_image: "Image" = betterproto.message_field(1)
    shading_image: "Image" = betterproto.message_field(2)
    target_num: int = betterproto.int64_field(3)
    collect_num: int = betterproto.int64_field(4)
    display_text: str = betterproto.string_field(5)
    left_icon: "Image" = betterproto.message_field(6)
    schema_url: str = betterproto.string_field(7)
    bg_color_values_list: List[str] = betterproto.string_field(8)
    round: int = betterproto.int64_field(9)


@dataclass(eq=False, repr=False)
class User(betterproto.Message):
    id: int = betterproto.int64_field(1)
    nickname: str = betterproto.string_field(3)
    bio_description: str = betterproto.string_field(5)
    avatar_thumb: "Image" = betterproto.message_field(9)
    avatar_medium: "Image" = betterproto.message_field(10)
    avatar_large: "Image" = betterproto.message_field(11)
    verified: bool = betterproto.bool_field(12)
    status: int = betterproto.int32_field(15)
    create_time: int = betterproto.int64_field(16)
    modify_time: int = betterproto.int64_field(17)
    secret: int = betterproto.int32_field(18)
    share_qrcode_uri: str = betterproto.string_field(19)
    badge_image_list: List["Image"] = betterproto.message_field(21)
    follow_info: "UserFollowInfo" = betterproto.message_field(22)
    pay_grade: "UserPayGrade" = betterproto.message_field(23)
    fans_club: "UserFansClub" = betterproto.message_field(24)
    border: "UserBorder" = betterproto.message_field(25)
    special_id: str = betterproto.string_field(26)
    avatar_border: "Image" = betterproto.message_field(27)
    medal: "Image" = betterproto.message_field(28)
    real_time_icons_list: List["Image"] = betterproto.message_field(29)
    new_real_time_icons_list: List["Image"] = betterproto.message_field(30)
    top_vip_no: int = betterproto.int64_field(31)
    user_attr: "UserUserAttr" = betterproto.message_field(32)
    own_room: "UserOwnRoom" = betterproto.message_field(33)
    pay_score: int = betterproto.int64_field(34)
    ticket_count: int = betterproto.int64_field(35)
    link_mic_stats: "LinkmicStatus" = betterproto.enum_field(37)
    display_id: str = betterproto.string_field(38)
    with_commerce_permission: bool = betterproto.bool_field(39)
    with_fusion_shop_entry: bool = betterproto.bool_field(40)
    webcast_anchor_level: "UserAnchorLevel" = betterproto.message_field(42)
    verified_content: str = betterproto.string_field(43)
    author_stats: "UserAuthorStats" = betterproto.message_field(44)
    top_fans_list: List["User"] = betterproto.message_field(45)
    sec_uid: str = betterproto.string_field(46)
    user_role: int = betterproto.int32_field(47)
    activity_reward: "UserActivityInfo" = betterproto.message_field(49)
    personal_card: "Image" = betterproto.message_field(52)
    authentication_info: "UserAuthenticationInfo" = betterproto.message_field(53)
    media_badge_image_list: List["Image"] = betterproto.message_field(57)
    commerce_webcast_config_ids_list: List[int] = betterproto.int64_field(60)
    border_list: List["UserBorder"] = betterproto.message_field(61)
    combo_badge_info: "UserComboBadgeInfo" = betterproto.message_field(62)
    subscribe_info: "UserSubscribeInfo" = betterproto.message_field(63)
    badge_list: List["BadgeStruct"] = betterproto.message_field(64)
    mint_type_label_list: List[int] = betterproto.int64_field(65)
    fans_club_info: "UserFansClubInfo" = betterproto.message_field(66)
    allow_find_by_contacts: bool = betterproto.bool_field(1002)
    allow_others_download_video: bool = betterproto.bool_field(1003)
    allow_others_download_when_sharing_video: bool = betterproto.bool_field(1004)
    allow_share_show_profile: bool = betterproto.bool_field(1005)
    allow_show_in_gossip: bool = betterproto.bool_field(1006)
    allow_show_my_action: bool = betterproto.bool_field(1007)
    allow_strange_comment: bool = betterproto.bool_field(1008)
    allow_unfollower_comment: bool = betterproto.bool_field(1009)
    allow_use_linkmic: bool = betterproto.bool_field(1010)
    anchor_level: "UserAnchorLevel" = betterproto.message_field(1011)
    avatar_jpg: "Image" = betterproto.message_field(1012)
    bg_img_url: str = betterproto.string_field(1013)
    block_status: int = betterproto.int32_field(1016)
    comment_restrict: int = betterproto.int32_field(1017)
    constellation: str = betterproto.string_field(1018)
    disable_ichat: int = betterproto.int32_field(1019)
    enable_ichat_img: int = betterproto.int64_field(1020)
    exp: int = betterproto.int32_field(1021)
    fan_ticket_count: int = betterproto.int64_field(1022)
    fold_stranger_chat: bool = betterproto.bool_field(1023)
    follow_status: int = betterproto.int64_field(1024)
    ichat_restrict_type: int = betterproto.int32_field(1027)
    id_str: str = betterproto.string_field(1028)
    is_follower: bool = betterproto.bool_field(1029)
    is_following: bool = betterproto.bool_field(1030)
    need_profile_guide: bool = betterproto.bool_field(1031)
    pay_scores: int = betterproto.int64_field(1032)
    push_comment_status: bool = betterproto.bool_field(1033)
    push_digg: bool = betterproto.bool_field(1034)
    push_follow: bool = betterproto.bool_field(1035)
    push_friend_action: bool = betterproto.bool_field(1036)
    push_ichat: bool = betterproto.bool_field(1037)
    push_status: bool = betterproto.bool_field(1038)
    push_video_post: bool = betterproto.bool_field(1039)
    push_video_recommend: bool = betterproto.bool_field(1040)
    stats: "UserUserStats" = betterproto.message_field(1041)
    verified_reason: str = betterproto.string_field(1043)
    with_car_management_permission: bool = betterproto.bool_field(1044)
    upcoming_event_list: List["UserLiveEventInfo"] = betterproto.message_field(1045)
    scm_label: str = betterproto.string_field(1046)
    ecommerce_entrance: "UserEcommerceEntrance" = betterproto.message_field(1047)
    is_block: bool = betterproto.bool_field(1048)


@dataclass(eq=False, repr=False)
class UserLiveEventInfo(betterproto.Message):
    event_id: int = betterproto.int64_field(1)
    start_time: int = betterproto.int64_field(2)
    duration: int = betterproto.int64_field(3)
    title: str = betterproto.string_field(4)
    description: str = betterproto.string_field(5)
    has_subscribed: bool = betterproto.bool_field(6)
    is_paid_event: bool = betterproto.bool_field(7)
    ticket_amount: int = betterproto.int64_field(8)
    pay_method: int = betterproto.int64_field(9)


@dataclass(eq=False, repr=False)
class UserLiveEventInfoWalletPackage(betterproto.Message):
    iap_id: str = betterproto.string_field(1)
    usd_price_show: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class UserActivityInfo(betterproto.Message):
    badge: "Image" = betterproto.message_field(1)
    storytag: "Image" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UserAnchorLevel(betterproto.Message):
    level: int = betterproto.int64_field(1)
    experience: int = betterproto.int64_field(2)
    lowest_experience_this_level: int = betterproto.int64_field(3)
    highest_experience_this_level: int = betterproto.int64_field(4)
    task_start_experience: int = betterproto.int64_field(5)
    task_start_time: int = betterproto.int64_field(6)
    task_decrease_experience: int = betterproto.int64_field(7)
    task_target_experience: int = betterproto.int64_field(8)
    task_end_time: int = betterproto.int64_field(9)
    profile_dialog_bg: "Image" = betterproto.message_field(10)
    profile_dialog_bg_back: "Image" = betterproto.message_field(11)
    stage_level: "Image" = betterproto.message_field(12)
    small_icon: "Image" = betterproto.message_field(13)


@dataclass(eq=False, repr=False)
class UserAuthenticationInfo(betterproto.Message):
    custom_verify: str = betterproto.string_field(1)
    enterprise_verify_reason: str = betterproto.string_field(2)
    authentication_badge: "Image" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class UserAuthorStats(betterproto.Message):
    video_total_count: int = betterproto.int64_field(1)
    video_total_play_count: int = betterproto.int64_field(2)
    video_total_share_count: int = betterproto.int64_field(3)
    video_total_series_count: int = betterproto.int64_field(4)
    variety_show_play_count: int = betterproto.int64_field(5)
    video_total_favorite_count: int = betterproto.int64_field(6)


@dataclass(eq=False, repr=False)
class UserBorder(betterproto.Message):
    icon: "Image" = betterproto.message_field(1)
    level: int = betterproto.int64_field(2)
    source: str = betterproto.string_field(3)
    profile_decoration_ribbon: "Image" = betterproto.message_field(4)
    avatar_background_color: str = betterproto.string_field(7)
    avatar_background_border_color: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class UserComboBadgeInfo(betterproto.Message):
    icon: "Image" = betterproto.message_field(1)
    combo_count: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class UserEcommerceEntrance(betterproto.Message):
    entrance_type: "UserEcommerceEntranceEntranceType" = betterproto.enum_field(1)
    creator_type: "UserEcommerceEntranceCreatorType" = betterproto.enum_field(2)
    schema: str = betterproto.string_field(3)
    shop_entrance_info: "UserEcommerceEntranceShopEntranceInfo" = (
        betterproto.message_field(4)
    )
    showcase_entrance_info: "UserEcommerceEntranceShowcaseEntranceInfo" = (
        betterproto.message_field(5)
    )


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShopEntranceInfo(betterproto.Message):
    shop_id: str = betterproto.string_field(1)
    shop_name: str = betterproto.string_field(2)
    shop_rating: str = betterproto.string_field(3)
    store_label: "UserEcommerceEntranceShopEntranceInfoStoreLabel" = (
        betterproto.message_field(4)
    )
    format_sold_count: str = betterproto.string_field(5)
    sold_count: int = betterproto.int64_field(6)
    exp_rate_percentile: int = betterproto.int32_field(7)
    exp_rate_top_display: str = betterproto.string_field(8)
    rate_display_style: int = betterproto.int32_field(9)
    show_rate_not_applicable: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShopEntranceInfoStoreLabel(betterproto.Message):
    official_label: (
        "UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabel"
    ) = betterproto.message_field(1)
    is_bytemall: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabel(
    betterproto.Message
):
    label_image_light: "UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabelShopLabelImage" = (
        betterproto.message_field(1)
    )
    label_image_dark: "UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabelShopLabelImage" = (
        betterproto.message_field(2)
    )
    label_type: int = betterproto.int64_field(3)
    label_type_str: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShopEntranceInfoStoreLabelStoreOfficialLabelShopLabelImage(
    betterproto.Message
):
    height: int = betterproto.int32_field(1)
    width: int = betterproto.int32_field(2)
    minetype: str = betterproto.string_field(3)
    thumb_uri: str = betterproto.string_field(4)
    thumb_uri_list: List[str] = betterproto.string_field(5)
    uri: str = betterproto.string_field(6)
    url_list: List[str] = betterproto.string_field(7)
    color: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class UserEcommerceEntranceShowcaseEntranceInfo(betterproto.Message):
    format_sold_count: str = betterproto.string_field(1)
    sold_count: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class UserFansClub(betterproto.Message):
    data: "UserFansClubFansClubData" = betterproto.message_field(1)


@dataclass(eq=False, repr=False)
class UserFansClubFansClubData(betterproto.Message):
    club_name: str = betterproto.string_field(1)
    level: int = betterproto.int32_field(2)
    user_fans_club_status: "UserFansClubFansClubDataUserFansClubStatus" = (
        betterproto.enum_field(3)
    )
    available_gift_ids_list: List[int] = betterproto.int64_field(5)
    anchor_id: int = betterproto.int64_field(6)


@dataclass(eq=False, repr=False)
class UserFansClubInfo(betterproto.Message):
    is_sleeping: bool = betterproto.bool_field(1)
    fans_level: int = betterproto.int64_field(2)
    fans_score: int = betterproto.int64_field(3)
    badge: "Image" = betterproto.message_field(4)
    fans_count: int = betterproto.int64_field(5)


@dataclass(eq=False, repr=False)
class UserFollowInfo(betterproto.Message):
    following_count: int = betterproto.int64_field(1)
    follower_count: int = betterproto.int64_field(2)
    follow_status: int = betterproto.int64_field(3)
    push_status: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class UserOwnRoom(betterproto.Message):
    room_ids_list: List[int] = betterproto.int64_field(1)
    room_ids_str_list: List[str] = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class UserPayGrade(betterproto.Message):
    diamond_icon: "Image" = betterproto.message_field(2)
    name: str = betterproto.string_field(3)
    icon: "Image" = betterproto.message_field(4)
    next_name: str = betterproto.string_field(5)
    level: int = betterproto.int64_field(6)
    next_icon: "Image" = betterproto.message_field(7)
    grade_describe: str = betterproto.string_field(13)
    grade_icon_list: List["UserPayGradeGradeIcon"] = betterproto.message_field(14)
    screen_chat_type: int = betterproto.int64_field(15)
    im_icon: "Image" = betterproto.message_field(16)
    im_icon_with_level: "Image" = betterproto.message_field(17)
    live_icon: "Image" = betterproto.message_field(18)
    new_im_icon_with_level: "Image" = betterproto.message_field(19)
    new_live_icon: "Image" = betterproto.message_field(20)
    upgrade_need_consume: int = betterproto.int64_field(21)
    next_privileges: str = betterproto.string_field(22)
    background: "Image" = betterproto.message_field(23)
    background_back: "Image" = betterproto.message_field(24)
    score: int = betterproto.int64_field(25)
    grade_banner: str = betterproto.string_field(1001)
    profile_dialog_bg: "Image" = betterproto.message_field(1002)
    profile_dialog_bg_back: "Image" = betterproto.message_field(1003)


@dataclass(eq=False, repr=False)
class UserPayGradeGradeIcon(betterproto.Message):
    icon: "Image" = betterproto.message_field(1)
    icon_diamond: int = betterproto.int64_field(2)
    level: int = betterproto.int64_field(3)
    level_str: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class UserSubscribeBadge(betterproto.Message):
    origin_img: "Image" = betterproto.message_field(3)
    preview_img: "Image" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class UserSubscribeInfo(betterproto.Message):
    qualification: bool = betterproto.bool_field(1)
    is_subscribe: bool = betterproto.bool_field(2)
    badge: "UserSubscribeBadge" = betterproto.message_field(3)
    enable_subscription: bool = betterproto.bool_field(4)
    subscriber_count: int = betterproto.int64_field(5)
    is_in_grace_period: bool = betterproto.bool_field(6)
    is_subscribed_to_anchor: bool = betterproto.bool_field(7)
    user_gift_sub_auth: bool = betterproto.bool_field(9)
    anchor_gift_sub_auth: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class UserUserAttr(betterproto.Message):
    is_muted: bool = betterproto.bool_field(1)
    is_admin: bool = betterproto.bool_field(2)
    is_super_admin: bool = betterproto.bool_field(3)
    mute_duration: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class UserUserStats(betterproto.Message):
    id: int = betterproto.int64_field(1)
    id_str: str = betterproto.string_field(2)
    following_count: int = betterproto.int64_field(3)
    follower_count: int = betterproto.int64_field(4)
    record_count: int = betterproto.int64_field(5)
    total_duration: int = betterproto.int64_field(6)
    daily_fan_ticket_count: int = betterproto.int64_field(7)
    daily_income: int = betterproto.int64_field(8)
    item_count: int = betterproto.int64_field(9)
    favorite_item_count: int = betterproto.int64_field(10)
    diamond_consumed_count: int = betterproto.int64_field(12)
    tuwen_item_count: int = betterproto.int64_field(13)


@dataclass(eq=False, repr=False)
class Emote(betterproto.Message):
    emote_id: str = betterproto.string_field(1)
    image: "Image" = betterproto.message_field(2)
    audit_status: "AuditStatus" = betterproto.enum_field(3)
    uuid: str = betterproto.string_field(4)
    emote_type: "EmoteType" = betterproto.enum_field(5)
    content_source: "ContentSource" = betterproto.enum_field(6)
    emote_private_type: "EmotePrivateType" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class PunishEventInfo(betterproto.Message):
    punish_type: str = betterproto.string_field(1)
    punish_reason: str = betterproto.string_field(2)
    punish_id: str = betterproto.string_field(3)
    violation_uid: int = betterproto.int64_field(4)
    punish_type_id: int = betterproto.int32_field(5)
    duration: int = betterproto.int64_field(6)


@dataclass(eq=False, repr=False)
class MsgFilter(betterproto.Message):
    is_gifter: bool = betterproto.bool_field(1)
    is_subscribed_to_anchor: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class UserIdentity(betterproto.Message):
    is_gift_giver_of_anchor: bool = betterproto.bool_field(1)
    is_subscriber_of_anchor: bool = betterproto.bool_field(2)
    is_mutual_following_with_anchor: bool = betterproto.bool_field(3)
    is_follower_of_anchor: bool = betterproto.bool_field(4)
    is_moderator_of_anchor: bool = betterproto.bool_field(5)
    is_anchor: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class Goal(betterproto.Message):
    id: int = betterproto.int64_field(1)
    description: str = betterproto.string_field(5)
    audit_status: int = betterproto.int32_field(6)
    start_time: int = betterproto.int64_field(8)
    expire_time: int = betterproto.int64_field(9)
    real_finish_time: int = betterproto.int64_field(10)
    contributors_list: List["GoalGoalContributor"] = betterproto.message_field(11)
    contributors_length: int = betterproto.int32_field(12)
    id_str: str = betterproto.string_field(13)
    audit_description: str = betterproto.string_field(14)
    stats: "GoalGoalStats" = betterproto.message_field(15)


@dataclass(eq=False, repr=False)
class GoalGoalStats(betterproto.Message):
    total_coins: int = betterproto.int64_field(1)
    total_contributor: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class GoalGoalContributor(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    avatar: "Image" = betterproto.message_field(2)
    display_id: str = betterproto.string_field(3)
    score: int = betterproto.int64_field(4)
    user_id_str: str = betterproto.string_field(5)
    in_room: bool = betterproto.bool_field(6)
    is_friend: bool = betterproto.bool_field(7)
    badge_list: List["BadgeStruct"] = betterproto.message_field(8)
    follow_by_owner: bool = betterproto.bool_field(9)
    is_fist_contribute: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class Indicator(betterproto.Message):
    key: str = betterproto.string_field(1)
    op: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class Ranking(betterproto.Message):
    type: str = betterproto.string_field(1)
    label: str = betterproto.string_field(2)
    color: "TikTokColor" = betterproto.message_field(3)
    details: List["ValueLabel"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class TikTokColor(betterproto.Message):
    color: str = betterproto.string_field(1)
    id: int = betterproto.uint64_field(4)
    data1: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class ValueLabel(betterproto.Message):
    data: int = betterproto.uint32_field(1)
    label: str = betterproto.string_field(2)
    label2: str = betterproto.string_field(3)
    label3: str = betterproto.string_field(11)


@dataclass(eq=False, repr=False)
class MessageDetails(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    color: "TikTokColor" = betterproto.message_field(2)
    category: str = betterproto.string_field(11)
    user: "UserContainer" = betterproto.message_field(21)


@dataclass(eq=False, repr=False)
class UserContainer(betterproto.Message):
    user: "User" = betterproto.message_field(1)
    data1: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class DataContainer(betterproto.Message):
    data1: int = betterproto.uint64_field(1)
    data2: int = betterproto.uint32_field(2)
    data3: int = betterproto.uint32_field(3)
    data4: int = betterproto.uint32_field(4)
    data5: int = betterproto.uint32_field(5)
    data6: int = betterproto.uint32_field(6)
    data7: int = betterproto.uint32_field(7)
    data8: int = betterproto.uint32_field(8)
    data9: int = betterproto.uint32_field(9)


@dataclass(eq=False, repr=False)
class TimeStampContainer(betterproto.Message):
    timestamp1: int = betterproto.uint64_field(1)
    timestamp2: int = betterproto.uint64_field(2)
    timestamp3: int = betterproto.uint64_field(3)


@dataclass(eq=False, repr=False)
class MemberMessageData(betterproto.Message):
    type: str = betterproto.string_field(1)
    label: str = betterproto.string_field(2)
    color: "TikTokColor" = betterproto.message_field(3)
    details: List["MessageDetails"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class LinkMicArmiesItems(betterproto.Message):
    host_user_id: int = betterproto.uint64_field(1)
    battle_groups: List["LinkMicArmiesItemsLinkMicArmiesGroup"] = (
        betterproto.message_field(2)
    )


@dataclass(eq=False, repr=False)
class LinkMicArmiesItemsLinkMicArmiesGroup(betterproto.Message):
    users: List["User"] = betterproto.message_field(1)
    points: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class PollStartContent(betterproto.Message):
    start_time: int = betterproto.int64_field(1)
    end_time: int = betterproto.int64_field(2)
    option_list: List["PollOptionInfo"] = betterproto.message_field(3)
    title: str = betterproto.string_field(4)
    operator: "User" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class PollEndContent(betterproto.Message):
    end_type: int = betterproto.int32_field(1)
    option_list: List["PollOptionInfo"] = betterproto.message_field(2)
    operator: "User" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PollOptionInfo(betterproto.Message):
    votes: int = betterproto.int32_field(1)
    display_content: str = betterproto.string_field(2)
    option_idx: int = betterproto.int32_field(3)
    vote_user_list: List["VoteUser"] = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class VoteUser(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    nick_name: str = betterproto.string_field(2)
    avatar_thumb: "Image" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class PollUpdateVotesContent(betterproto.Message):
    option_list: List["PollOptionInfo"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class UserFanTicket(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    fan_ticket: int = betterproto.int64_field(2)
    match_total_score: int = betterproto.int64_field(3)
    match_rank: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class FanTicketRoomNoticeContent(betterproto.Message):
    user_fan_ticket_list: List["UserFanTicket"] = betterproto.message_field(1)
    total_link_mic_fan_ticket: int = betterproto.int64_field(2)
    match_id: int = betterproto.int64_field(3)
    event_time: int = betterproto.int64_field(4)
    fan_ticket_icon_url: str = betterproto.string_field(5)


@dataclass(eq=False, repr=False)
class LinkerAcceptNoticeContent(betterproto.Message):
    from_user_id: int = betterproto.int64_field(1)
    from_room_id: int = betterproto.int64_field(2)
    to_user_id: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class LinkerCancelContent(betterproto.Message):
    from_user_id: int = betterproto.int64_field(1)
    to_user_id: int = betterproto.int64_field(2)
    cancel_type: int = betterproto.int64_field(3)
    action_id: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class ListUser(betterproto.Message):
    user: "User" = betterproto.message_field(1)
    linkmic_id: int = betterproto.int64_field(2)
    linkmic_id_str: str = betterproto.string_field(3)
    link_status: int = betterproto.int64_field(4)
    link_type: "ListUserLinkType" = betterproto.enum_field(5)
    user_position: int = betterproto.int32_field(6)
    silence_status: int = betterproto.int32_field(7)
    modify_time: int = betterproto.int64_field(8)
    linker_id: int = betterproto.int64_field(9)
    role_type: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class LinkerCloseContent(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LinkerCreateContent(betterproto.Message):
    owner_id: int = betterproto.int64_field(1)
    owner_room_id: int = betterproto.int64_field(2)
    link_type: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class LinkerEnterContent(betterproto.Message):
    linked_users_list: List["ListUser"] = betterproto.message_field(1)
    anchor_multi_live_enum: int = betterproto.int32_field(2)
    anchor_setting_info: "LinkmicUserSettingInfo" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class LinkerInviteContent(betterproto.Message):
    from_user_id: int = betterproto.int64_field(1)
    from_room_id: int = betterproto.int64_field(2)
    to_rtc_ext_info: str = betterproto.string_field(3)
    rtc_join_channel: bool = betterproto.bool_field(4)
    vendor: int = betterproto.int64_field(5)
    sec_from_user_id: str = betterproto.string_field(6)
    to_linkmic_id_str: str = betterproto.string_field(7)
    from_user: "User" = betterproto.message_field(8)
    required_mic_idx: int = betterproto.int64_field(9)


@dataclass(eq=False, repr=False)
class LinkerKickOutContent(betterproto.Message):
    from_user_id: int = betterproto.int64_field(1)
    kickout_reason: "KickoutReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class LinkerLeaveContent(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    linkmic_id_str: str = betterproto.string_field(2)
    send_leave_uid: int = betterproto.int64_field(3)
    leave_reason: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class LinkerLinkedListChangeContent(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class CohostListChangeContent(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LinkerListChangeContent(betterproto.Message):
    linked_users: List["ListUser"] = betterproto.message_field(1)
    applied_users: List["ListUser"] = betterproto.message_field(2)
    connecting_users: List["ListUser"] = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class LinkerMediaChangeContent(betterproto.Message):
    op: int = betterproto.int64_field(1)
    to_user_id: int = betterproto.int64_field(2)
    anchor_id: int = betterproto.int64_field(3)
    room_id: int = betterproto.int64_field(4)
    change_scene: int = betterproto.int64_field(5)


@dataclass(eq=False, repr=False)
class LinkerMicIdxUpdateContent(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LinkerMuteContent(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    status: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class LinkerRandomMatchContent(betterproto.Message):
    user: "User" = betterproto.message_field(1)
    room_id: int = betterproto.int64_field(2)
    invite_type: int = betterproto.int64_field(3)
    match_id: str = betterproto.string_field(4)
    inner_channel_id: int = betterproto.int64_field(5)


@dataclass(eq=False, repr=False)
class LinkerReplyContent(betterproto.Message):
    from_user_id: int = betterproto.int64_field(1)
    from_room_id: int = betterproto.int64_field(2)
    from_user_linkmic_info: "LinkerReplyContentLinkmicInfo" = betterproto.message_field(
        3
    )
    to_user_id: int = betterproto.int64_field(4)
    to_user_linkmic_info: "LinkerReplyContentLinkmicInfo" = betterproto.message_field(5)
    link_type: int = betterproto.int64_field(6)
    reply_status: int = betterproto.int64_field(7)
    linker_setting: "LinkerSetting" = betterproto.message_field(8)
    from_user: "User" = betterproto.message_field(9)
    to_user: "User" = betterproto.message_field(10)


@dataclass(eq=False, repr=False)
class LinkerReplyContentLinkmicInfo(betterproto.Message):
    access_key: str = betterproto.string_field(1)
    link_mic_id: int = betterproto.int64_field(2)
    joinable: bool = betterproto.bool_field(3)
    confluence_type: int = betterproto.int32_field(4)
    rtc_ext_info: str = betterproto.string_field(5)
    rtc_app_id: str = betterproto.string_field(6)
    rtc_app_sign: str = betterproto.string_field(7)
    linkmic_id_str: str = betterproto.string_field(8)
    vendor: int = betterproto.int64_field(9)


@dataclass(eq=False, repr=False)
class LinkerSetting(betterproto.Message):
    max_member_limit: int = betterproto.int64_field(1)
    link_type: int = betterproto.int64_field(2)
    scene: int = betterproto.int64_field(3)
    owner_user_id: int = betterproto.int64_field(4)
    owner_room_id: int = betterproto.int64_field(5)
    vendor: int = betterproto.int64_field(6)


@dataclass(eq=False, repr=False)
class LinkerSysKickOutContent(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    linkmic_id_str: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class LinkmicUserToastContent(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    room_id: int = betterproto.int64_field(2)
    display_text: "Text" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class LinkerUpdateUserContent(betterproto.Message):
    from_user_id: int = betterproto.int64_field(1)
    to_user_id: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class LinkerUpdateUserSettingContent(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LinkerWaitingListChangeContent(betterproto.Message):
    pass


@dataclass(eq=False, repr=False)
class LinkmicUserSettingInfo(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    layout: int = betterproto.int64_field(2)
    fix_mic_num: int = betterproto.int64_field(3)
    allow_request_from_user: int = betterproto.int64_field(4)
    allow_request_from_follower_only: int = betterproto.int64_field(5)
    applier_sort_setting: "LinkmicApplierSortSetting" = betterproto.enum_field(7)


@dataclass(eq=False, repr=False)
class Player(betterproto.Message):
    room_id: int = betterproto.int64_field(1)
    user_id: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class AllListUser(betterproto.Message):
    linked_list: List["LinkLayerListUser"] = betterproto.message_field(2)
    applied_list: List["LinkLayerListUser"] = betterproto.message_field(3)
    invited_list: List["LinkLayerListUser"] = betterproto.message_field(4)
    ready_list: List["LinkLayerListUser"] = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class LinkLayerListUser(betterproto.Message):
    user: "User" = betterproto.message_field(1)
    linkmic_id: int = betterproto.int64_field(2)
    pos: "Position" = betterproto.message_field(3)
    linked_time_nano: int = betterproto.int64_field(4)
    app_version: str = betterproto.string_field(5)
    magic_number1: int = betterproto.int64_field(7)


@dataclass(eq=False, repr=False)
class Position(betterproto.Message):
    type: int = betterproto.int32_field(1)
    link: "LinkPosition" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LinkPosition(betterproto.Message):
    position: int = betterproto.int32_field(1)
    opt: int = betterproto.int32_field(2)


@dataclass(eq=False, repr=False)
class GroupPlayer(betterproto.Message):
    channel_id: int = betterproto.int64_field(1)
    user: "User" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class DslConfig(betterproto.Message):
    scene_version: int = betterproto.int32_field(1)
    layout_id: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class GroupChannelAllUser(betterproto.Message):
    group_channel_id: int = betterproto.int64_field(1)
    user_list: List["GroupChannelUser"] = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class GroupChannelUser(betterproto.Message):
    channel_id: int = betterproto.int64_field(1)
    status: "GroupStatus" = betterproto.enum_field(2)
    type: "TextType" = betterproto.enum_field(3)
    all_user: "AllListUser" = betterproto.message_field(4)
    join_time: int = betterproto.int64_field(5)
    linked_time: int = betterproto.int64_field(6)
    owner_user: "GroupPlayer" = betterproto.message_field(7)


@dataclass(eq=False, repr=False)
class RtcExtraInfo(betterproto.Message):
    live_rtc_engine_config: "RtcExtraInfoRtcEngineConfig" = betterproto.message_field(1)
    live_rtc_video_param_list: List["RtcExtraInfoRtcLiveVideoParam"] = (
        betterproto.message_field(2)
    )
    rtc_bitrate_map: "RtcExtraInfoRtcBitrateMap" = betterproto.message_field(3)
    rtc_fps: int = betterproto.int32_field(4)
    rtc_business_id: str = betterproto.string_field(8)
    interact_client_type: int = betterproto.int32_field(10)


@dataclass(eq=False, repr=False)
class RtcExtraInfoRtcEngineConfig(betterproto.Message):
    rtc_app_id: str = betterproto.string_field(1)
    rtc_user_id: str = betterproto.string_field(2)
    rtc_token: str = betterproto.string_field(3)
    rtc_channel_id: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class RtcExtraInfoRtcLiveVideoParam(betterproto.Message):
    strategy_id: int = betterproto.int32_field(1)
    params: "RtcExtraInfoRtcVideoParam" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class RtcExtraInfoRtcVideoParam(betterproto.Message):
    width: int = betterproto.int32_field(1)
    height: int = betterproto.int32_field(2)
    fps: int = betterproto.int32_field(3)
    bitrate_kbps: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class RtcExtraInfoRtcBitrateMap(betterproto.Message):
    xx1: int = betterproto.int32_field(1)
    xx2: int = betterproto.int32_field(2)
    xx3: int = betterproto.int32_field(3)
    xx4: int = betterproto.int32_field(4)


@dataclass(eq=False, repr=False)
class CreateChannelContent(betterproto.Message):
    owner: "Player" = betterproto.message_field(1)
    owner_link_mic_id: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class ListChangeContent(betterproto.Message):
    type: "TextType" = betterproto.enum_field(1)
    list: "AllListUser" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class MultiLiveContent(betterproto.Message):
    invite_biz_content: "MultiLiveContentInviteBizContent" = betterproto.message_field(
        2
    )
    reply_biz_content: "MultiLiveContentReplyBizContent" = betterproto.message_field(3)
    permit_biz_content: "MultiLiveContentPermitBizContent" = betterproto.message_field(
        4
    )
    kick_out_biz_content: "MultiLiveContentKickOutBizContent" = (
        betterproto.message_field(6)
    )


@dataclass(eq=False, repr=False)
class MultiLiveContentInviteBizContent(betterproto.Message):
    anchor_setting_info: "LinkmicUserSettingInfo" = betterproto.message_field(1)
    invite_source: int = betterproto.int64_field(2)
    operator_user_info: "User" = betterproto.message_field(3)
    operator_link_admin_type: int = betterproto.int64_field(4)
    invitee_user_info: "User" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class MultiLiveContentReplyBizContent(betterproto.Message):
    link_type: int = betterproto.int32_field(1)
    is_turn_off_invitation: int = betterproto.int32_field(2)
    reply_user_info: "User" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class MultiLiveContentPermitBizContent(betterproto.Message):
    anchor_setting_info: "LinkmicUserSettingInfo" = betterproto.message_field(1)
    expire_timestamp: int = betterproto.int64_field(2)
    operator_user_info: "User" = betterproto.message_field(3)
    operator_link_admin_type: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class MultiLiveContentKickOutBizContent(betterproto.Message):
    operator_user_info: "User" = betterproto.message_field(1)
    operator_link_admin_type: int = betterproto.int64_field(2)
    kick_player_user_info: "User" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class InviteContent(betterproto.Message):
    invitor: "Player" = betterproto.message_field(1)
    invitee_rtc_ext_info: "RtcExtraInfo" = betterproto.message_field(2)
    invitor_link_mic_id: str = betterproto.string_field(3)
    invitee_link_mic_id: str = betterproto.string_field(4)
    is_owner: bool = betterproto.bool_field(5)
    pos: "Position" = betterproto.message_field(6)
    dsl: "DslConfig" = betterproto.message_field(7)
    invitee: "User" = betterproto.message_field(8)
    operator: "User" = betterproto.message_field(9)


@dataclass(eq=False, repr=False)
class ApplyContent(betterproto.Message):
    applier: "Player" = betterproto.message_field(1)
    applier_link_mic_id: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class PermitApplyContent(betterproto.Message):
    permiter: "Player" = betterproto.message_field(1)
    permiter_link_mic_id: str = betterproto.string_field(2)
    applier_pos: "Position" = betterproto.message_field(3)
    reply_status: "ReplyStatus" = betterproto.enum_field(4)
    dsl: "DslConfig" = betterproto.message_field(5)
    applier: "User" = betterproto.message_field(6)
    operator: "User" = betterproto.message_field(7)
    applier_link_mic_id: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class ReplyInviteContent(betterproto.Message):
    invitee: "Player" = betterproto.message_field(1)
    reply_status: "ReplyStatus" = betterproto.enum_field(2)
    invitee_link_mic_id: str = betterproto.string_field(3)
    invitee_pos: "Position" = betterproto.message_field(4)
    invite_operator_user: "Player" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class KickOutContent(betterproto.Message):
    offliner: "Player" = betterproto.message_field(1)
    kickout_reason: "KickoutReason" = betterproto.enum_field(2)


@dataclass(eq=False, repr=False)
class CancelApplyContent(betterproto.Message):
    applier: "Player" = betterproto.message_field(1)
    applier_link_mic_id: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class CancelInviteContent(betterproto.Message):
    invitor: "Player" = betterproto.message_field(1)
    invitor_link_mic_id: str = betterproto.string_field(2)
    invitee_link_mic_id: str = betterproto.string_field(3)
    invite_seq_id: int = betterproto.int64_field(4)
    invitee: "Player" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class LeaveContent(betterproto.Message):
    leaver: "Player" = betterproto.message_field(1)
    leave_reason: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class FinishChannelContent(betterproto.Message):
    owner: "Player" = betterproto.message_field(1)
    finish_reason: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class JoinDirectContent(betterproto.Message):
    joiner: "LinkLayerListUser" = betterproto.message_field(1)
    all_users: "AllListUser" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class LeaveJoinGroupContent(betterproto.Message):
    operator: "GroupPlayer" = betterproto.message_field(1)
    group_channel_id: int = betterproto.int64_field(2)
    leave_source: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class PermitJoinGroupContent(betterproto.Message):
    approver: "GroupPlayer" = betterproto.message_field(1)
    agree_status: "AgreeStatus" = betterproto.enum_field(2)
    type: "TextType" = betterproto.enum_field(3)
    group_ext_info_list: List["RtcExtraInfo"] = betterproto.message_field(4)
    group_user: "GroupChannelAllUser" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class CancelJoinGroupContent(betterproto.Message):
    leaver_list: List["GroupPlayer"] = betterproto.message_field(1)
    operator: "GroupPlayer" = betterproto.message_field(2)
    type: "TextType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class P2PGroupChangeContent(betterproto.Message):
    group_ext_info_list: List["RtcExtraInfo"] = betterproto.message_field(1)
    group_user: "GroupChannelAllUser" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class BusinessContent(betterproto.Message):
    over_length: int = betterproto.int64_field(1)
    multi_live_content: "MultiLiveContent" = betterproto.message_field(100)
    cohost_content: "BusinessContentCohostContent" = betterproto.message_field(200)


@dataclass(eq=False, repr=False)
class BusinessContentCohostContent(betterproto.Message):
    join_group_biz_content: "BusinessContentJoinGroupBizContent" = (
        betterproto.message_field(1)
    )


@dataclass(eq=False, repr=False)
class BusinessContentJoinGroupBizContent(betterproto.Message):
    from_room_age_restricted: int = betterproto.int32_field(1)
    from_tag: "BusinessContentTag" = betterproto.message_field(2)
    dialog: "BusinessContentPerceptionDialogInfo" = betterproto.message_field(3)
    punish_info: "PunishEventInfo" = betterproto.message_field(4)
    join_group_msg_extra: "BusinessContentJoinGroupMessageExtra" = (
        betterproto.message_field(101)
    )


@dataclass(eq=False, repr=False)
class BusinessContentTag(betterproto.Message):
    tag_type: int = betterproto.int32_field(1)
    tag_value: str = betterproto.string_field(2)
    tag_text: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class BusinessContentPerceptionDialogInfo(betterproto.Message):
    icon_type: int = betterproto.int64_field(1)
    title: "Text" = betterproto.message_field(2)
    sub_title: "Text" = betterproto.message_field(3)
    advice_action_text: "Text" = betterproto.message_field(4)
    default_action_text: "Text" = betterproto.message_field(5)
    violation_detail_url: str = betterproto.string_field(6)
    scene: int = betterproto.int32_field(7)
    target_user_id: int = betterproto.int64_field(8)
    target_room_id: int = betterproto.int64_field(9)
    count_down_time: int = betterproto.int64_field(10)
    show_feedback: bool = betterproto.bool_field(11)
    feedback_options_list: List["BusinessContentPerceptionFeedbackOption"] = (
        betterproto.message_field(12)
    )
    policy_tip: int = betterproto.int64_field(13)


@dataclass(eq=False, repr=False)
class BusinessContentPerceptionFeedbackOption(betterproto.Message):
    id: int = betterproto.int64_field(1)
    content_key: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class BusinessContentJoinGroupMessageExtra(betterproto.Message):
    source_type: int = betterproto.int64_field(1)
    extra: "BusinessContentJoinGroupMessageExtraRivalExtra" = betterproto.message_field(
        2
    )
    other_users_list: List["BusinessContentJoinGroupMessageExtraRivalExtra"] = (
        betterproto.message_field(3)
    )


@dataclass(eq=False, repr=False)
class BusinessContentJoinGroupMessageExtraRivalExtra(betterproto.Message):
    user_count: int = betterproto.int64_field(4)
    avatar_thumb: "Image" = betterproto.message_field(5)
    display_id: str = betterproto.string_field(6)
    authentication_info: (
        "BusinessContentJoinGroupMessageExtraRivalExtraAuthenticationInfo"
    ) = betterproto.message_field(7)
    nickname: str = betterproto.string_field(8)
    follow_status: int = betterproto.int64_field(9)
    hashtag: "BusinessContentHashtag" = betterproto.message_field(10)
    top_host_info: "BusinessContentTopHostInfo" = betterproto.message_field(11)
    user_id: int = betterproto.int64_field(12)
    is_best_teammate: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class BusinessContentJoinGroupMessageExtraRivalExtraAuthenticationInfo(
    betterproto.Message
):
    custom_verify: str = betterproto.string_field(1)
    enterprise_verify_reason: str = betterproto.string_field(2)
    authentication_badge: "Image" = betterproto.message_field(3)


@dataclass(eq=False, repr=False)
class BusinessContentHashtag(betterproto.Message):
    id: int = betterproto.int64_field(1)
    title: str = betterproto.string_field(2)
    image: "Image" = betterproto.message_field(3)
    namespace: "HashtagNamespace" = betterproto.enum_field(4)


@dataclass(eq=False, repr=False)
class BusinessContentTopHostInfo(betterproto.Message):
    rank_type: str = betterproto.string_field(1)
    top_index: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class JoinGroupContent(betterproto.Message):
    group_user: "GroupChannelAllUser" = betterproto.message_field(1)
    join_user: "GroupPlayer" = betterproto.message_field(2)
    type: "TextType" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class WebcastPushFrame(betterproto.Message):
    seq_id: int = betterproto.uint64_field(1)
    log_id: int = betterproto.uint64_field(2)
    service: int = betterproto.uint64_field(3)
    method: int = betterproto.uint64_field(4)
    headers: Dict[str, str] = betterproto.map_field(
        5, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    payload_encoding: str = betterproto.string_field(6)
    payload_type: str = betterproto.string_field(7)
    payload: bytes = betterproto.bytes_field(8)


@dataclass(eq=False, repr=False)
class WebcastResponse(betterproto.Message):
    messages: List["WebcastResponseMessage"] = betterproto.message_field(1)
    cursor: str = betterproto.string_field(2)
    fetch_interval: int = betterproto.int64_field(3)
    now: int = betterproto.int64_field(4)
    internal_ext: str = betterproto.string_field(5)
    fetch_type: int = betterproto.int32_field(6)
    route_params_map: Dict[str, str] = betterproto.map_field(
        7, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )
    heart_beat_duration: int = betterproto.int64_field(8)
    needs_ack: bool = betterproto.bool_field(9)
    push_server: str = betterproto.string_field(10)
    is_first: bool = betterproto.bool_field(11)
    history_comment_cursor: str = betterproto.string_field(12)
    history_no_more: bool = betterproto.bool_field(13)


@dataclass(eq=False, repr=False)
class WebcastResponseMessage(betterproto.Message):
    method: str = betterproto.string_field(1)
    payload: bytes = betterproto.bytes_field(2)
    msg_id: int = betterproto.int64_field(3)
    msg_type: int = betterproto.int32_field(4)
    offset: int = betterproto.int64_field(5)
    is_history: bool = betterproto.bool_field(6)


@dataclass(eq=False, repr=False)
class WebcastGiftMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    gift_id: int = betterproto.int64_field(2)
    fan_ticket_count: int = betterproto.int64_field(3)
    group_count: int = betterproto.int32_field(4)
    repeat_count: int = betterproto.int32_field(5)
    combo_count: int = betterproto.int32_field(6)
    user: "User" = betterproto.message_field(7)
    to_user: "User" = betterproto.message_field(8)
    repeat_end: int = betterproto.int32_field(9)
    group_id: int = betterproto.int64_field(11)
    income_taskgifts: int = betterproto.int64_field(12)
    room_fan_ticket_count: int = betterproto.int64_field(13)
    gift: "GiftStruct" = betterproto.message_field(15)
    log_id: str = betterproto.string_field(16)
    send_type: int = betterproto.int64_field(17)
    monitor_extra: str = betterproto.string_field(22)
    color_id: int = betterproto.int64_field(24)
    is_first_sent: bool = betterproto.bool_field(25)
    order_id: str = betterproto.string_field(28)
    user_identity: "UserIdentity" = betterproto.message_field(32)
    user_gift_reciever: "WebcastGiftMessageUserGiftReciever" = (
        betterproto.message_field(23)
    )


@dataclass(eq=False, repr=False)
class WebcastGiftMessageUserGiftReciever(betterproto.Message):
    user_id: int = betterproto.int64_field(1)
    device_name: str = betterproto.string_field(10)


@dataclass(eq=False, repr=False)
class WebcastGiftMessageGiftImPriority(betterproto.Message):
    queue_sizes_list: List[int] = betterproto.int64_field(1)
    self_queue_priority: int = betterproto.int64_field(2)
    priority: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class WebcastGiftMessagePublicAreaCommon(betterproto.Message):
    user_label: "Image" = betterproto.message_field(1)
    user_consume_in_room: int = betterproto.int64_field(2)


@dataclass(eq=False, repr=False)
class RoomMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    content: str = betterproto.string_field(2)
    supprot_landscape: bool = betterproto.bool_field(3)
    source: int = betterproto.int64_field(4)
    icon: "Image" = betterproto.message_field(5)
    scene: str = betterproto.string_field(6)
    is_welcome: bool = betterproto.bool_field(7)


@dataclass(eq=False, repr=False)
class WebcastRoomMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    content: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastBarrageMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    event: "WebcastBarrageMessageBarrageEvent" = betterproto.message_field(2)
    msg_type: "WebcastBarrageMessageBarrageType" = betterproto.enum_field(3)
    icon: "Image" = betterproto.message_field(4)
    content: "Text" = betterproto.message_field(5)
    duration: int = betterproto.int32_field(6)
    background: "Image" = betterproto.message_field(7)
    right_icon: "Image" = betterproto.message_field(8)
    user_grade_param: "WebcastBarrageMessageBarrageTypeUserGradeParam" = (
        betterproto.message_field(100)
    )
    fans_level_param: "WebcastBarrageMessageBarrageTypeFansLevelParam" = (
        betterproto.message_field(101)
    )
    subscribe_gift_param: "WebcastBarrageMessageBarrageTypeSubscribeGiftParam" = (
        betterproto.message_field(102)
    )


@dataclass(eq=False, repr=False)
class WebcastBarrageMessageBarrageTypeUserGradeParam(betterproto.Message):
    current_grade: int = betterproto.int32_field(1)
    display_config: int = betterproto.int32_field(2)
    user_id: str = betterproto.string_field(3)
    user: "User" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WebcastBarrageMessageBarrageTypeFansLevelParam(betterproto.Message):
    current_grade: int = betterproto.int32_field(1)
    display_config: int = betterproto.int32_field(2)
    user: "User" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WebcastBarrageMessageBarrageTypeSubscribeGiftParam(betterproto.Message):
    gift_sub_count: int = betterproto.int64_field(1)
    show_gift_sub_count: bool = betterproto.bool_field(2)


@dataclass(eq=False, repr=False)
class WebcastBarrageMessageBarrageEvent(betterproto.Message):
    event_name: str = betterproto.string_field(1)


@dataclass(eq=False, repr=False)
class WebcastCaptionMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    time_stamp: int = betterproto.uint64_field(2)
    caption_data: "WebcastCaptionMessageCaptionData" = betterproto.message_field(4)


@dataclass(eq=False, repr=False)
class WebcastCaptionMessageCaptionData(betterproto.Message):
    language: str = betterproto.string_field(1)
    text: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastChatMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    content: str = betterproto.string_field(3)
    visible_to_sender: bool = betterproto.bool_field(4)
    background_image: "Image" = betterproto.message_field(5)
    full_screen_text_color: str = betterproto.string_field(6)
    background_image_v2: "Image" = betterproto.message_field(7)
    gift_image: "Image" = betterproto.message_field(10)
    input_type: int = betterproto.int32_field(11)
    at_user: "User" = betterproto.message_field(12)
    emotes_list: List["WebcastChatMessageEmoteWithIndex"] = betterproto.message_field(
        13
    )
    content_language: str = betterproto.string_field(14)
    quick_chat_scene: int = betterproto.int32_field(16)
    community_flagged_status: int = betterproto.int32_field(17)
    user_identity: "UserIdentity" = betterproto.message_field(18)
    comment_quality_scores: Dict[str, str] = betterproto.map_field(
        19, betterproto.TYPE_STRING, betterproto.TYPE_STRING
    )


@dataclass(eq=False, repr=False)
class WebcastChatMessageEmoteWithIndex(betterproto.Message):
    index: int = betterproto.int64_field(1)
    emote: "Emote" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastControlMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    action: "ControlAction" = betterproto.enum_field(2)
    tips: str = betterproto.string_field(3)
    extra: "WebcastControlMessageExtra" = betterproto.message_field(4)
    perception_audience_text: "Text" = betterproto.message_field(6)
    punish_info: "PunishEventInfo" = betterproto.message_field(7)
    float_text: "Text" = betterproto.message_field(8)
    float_style: int = betterproto.int32_field(9)


@dataclass(eq=False, repr=False)
class WebcastControlMessageExtra(betterproto.Message):
    ban_info_url: str = betterproto.string_field(1)
    reason_no: int = betterproto.int64_field(2)
    title: "Text" = betterproto.message_field(3)
    violation_reason: "Text" = betterproto.message_field(4)
    content: "Text" = betterproto.message_field(5)
    got_it_button: "Text" = betterproto.message_field(6)
    ban_detail_button: "Text" = betterproto.message_field(7)
    source: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class WebcastEmoteChatMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    emote_list: List["Emote"] = betterproto.message_field(3)
    msg_filter: "MsgFilter" = betterproto.message_field(4)
    user_identity: "UserIdentity" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WebcastEnvelopeMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    envelope_info: "WebcastEnvelopeMessageEnvelopeInfo" = betterproto.message_field(2)
    display: "EnvelopeDisplay" = betterproto.enum_field(3)


@dataclass(eq=False, repr=False)
class WebcastEnvelopeMessageEnvelopeInfo(betterproto.Message):
    envelope_id: str = betterproto.string_field(1)
    business_type: "EnvelopeBusinessType" = betterproto.enum_field(2)
    envelope_idc: str = betterproto.string_field(3)
    send_user_name: str = betterproto.string_field(4)
    diamond_count: int = betterproto.int32_field(5)
    people_count: int = betterproto.int32_field(6)
    unpack_at: int = betterproto.int32_field(7)
    send_user_id: str = betterproto.string_field(8)
    send_user_avatar: "Image" = betterproto.message_field(9)
    create_at: str = betterproto.string_field(10)
    room_id: str = betterproto.string_field(11)
    follow_show_status: "EnvelopeFollowShowStatus" = betterproto.enum_field(12)
    skin_id: int = betterproto.int32_field(13)


@dataclass(eq=False, repr=False)
class WebcastGoalUpdateMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    indicator: "Indicator" = betterproto.message_field(2)
    goal: "Goal" = betterproto.message_field(3)
    contributor_id: int = betterproto.int64_field(4)
    contributor_avatar: "Image" = betterproto.message_field(5)
    contributor_display_id: str = betterproto.string_field(6)
    contribute_count: int = betterproto.int64_field(9)
    contribute_score: int = betterproto.int64_field(10)
    gift_repeat_count: int = betterproto.int64_field(11)
    contributor_id_str: str = betterproto.string_field(12)
    pin: bool = betterproto.bool_field(13)
    unpin: bool = betterproto.bool_field(14)


@dataclass(eq=False, repr=False)
class WebcastImDeleteMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    delete_msg_ids_list: List[int] = betterproto.int64_field(2)
    delete_user_ids_list: List[int] = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class WebcastInRoomBannerMessage(betterproto.Message):
    header: "Common" = betterproto.message_field(1)
    json: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastLikeMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    count: int = betterproto.int32_field(2)
    total: int = betterproto.int32_field(3)
    user: "User" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WebcastRoomUserSeqMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    ranks_list: List["WebcastRoomUserSeqMessageContributor"] = (
        betterproto.message_field(2)
    )
    total: int = betterproto.int64_field(3)
    pop_str: str = betterproto.string_field(4)
    seats_list: List["WebcastRoomUserSeqMessageContributor"] = (
        betterproto.message_field(5)
    )
    popularity: int = betterproto.int64_field(6)
    total_user: int = betterproto.int32_field(7)
    anonymous: int = betterproto.int64_field(8)


@dataclass(eq=False, repr=False)
class WebcastRoomUserSeqMessageContributor(betterproto.Message):
    score: int = betterproto.int32_field(1)
    user: "User" = betterproto.message_field(2)
    rank: int = betterproto.int32_field(3)
    delta: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class WebcastSocialMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    share_type: int = betterproto.int64_field(3)
    action: int = betterproto.int64_field(4)
    share_target: str = betterproto.string_field(5)
    follow_count: int = betterproto.int32_field(6)
    share_display_style: int = betterproto.int64_field(7)
    share_count: int = betterproto.int32_field(8)


@dataclass(eq=False, repr=False)
class WebcastSubNotifyMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    sub_month: int = betterproto.int64_field(4)
    subscribe_type: "SubscribeType" = betterproto.enum_field(5)
    old_subscribe_status: "OldSubscribeStatus" = betterproto.enum_field(6)
    subscribing_status: "SubscribingStatus" = betterproto.enum_field(8)
    is_send: bool = betterproto.bool_field(9)
    is_custom: bool = betterproto.bool_field(10)


@dataclass(eq=False, repr=False)
class WebcastRankUpdateMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    updates_list: List["WebcastRankUpdateMessageRankUpdate"] = (
        betterproto.message_field(2)
    )
    group_type: int = betterproto.int64_field(3)
    priority: int = betterproto.int64_field(5)
    tabs_list: List["WebcastRankUpdateMessageRankTabInfo"] = betterproto.message_field(
        6
    )
    is_animation_loop_play: bool = betterproto.bool_field(7)
    animation_loop_for_off: bool = betterproto.bool_field(8)


@dataclass(eq=False, repr=False)
class WebcastRankUpdateMessageRankTabInfo(betterproto.Message):
    rank_type: int = betterproto.int64_field(1)
    title: str = betterproto.string_field(2)
    title_text: "Text" = betterproto.message_field(3)
    list_lynx_type: int = betterproto.int64_field(4)


@dataclass(eq=False, repr=False)
class WebcastRankUpdateMessageRankUpdate(betterproto.Message):
    rank_type: int = betterproto.int64_field(1)
    owner_rank: int = betterproto.int64_field(2)
    default_content: "Text" = betterproto.message_field(3)
    show_entrance_animation: bool = betterproto.bool_field(5)
    countdown: int = betterproto.int64_field(6)
    related_tab_rank_type: int = betterproto.int64_field(8)
    request_first_show_type: int = betterproto.int64_field(9)
    supported_version: int = betterproto.int64_field(10)
    owneronrank: bool = betterproto.bool_field(11)


@dataclass(eq=False, repr=False)
class WebcastMemberMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    user: "User" = betterproto.message_field(2)
    member_count: int = betterproto.int32_field(3)
    operator: "User" = betterproto.message_field(4)
    is_set_to_admin: bool = betterproto.bool_field(5)
    is_top_user: bool = betterproto.bool_field(6)
    rank_score: int = betterproto.int64_field(7)
    top_user_no: int = betterproto.int64_field(8)
    enter_type: int = betterproto.int64_field(9)
    action: "MemberMessageAction" = betterproto.enum_field(10)
    action_description: str = betterproto.string_field(11)
    user_id: int = betterproto.int64_field(12)
    effect_config: "WebcastMemberMessageEffectConfig" = betterproto.message_field(13)
    pop_str: str = betterproto.string_field(14)
    enter_effect_config: "WebcastMemberMessageEffectConfig" = betterproto.message_field(
        15
    )
    background_image: "Image" = betterproto.message_field(16)
    background_image_v2: "Image" = betterproto.message_field(17)
    anchor_display_text: "Text" = betterproto.message_field(18)
    client_enter_source: str = betterproto.string_field(19)
    client_enter_type: str = betterproto.string_field(20)
    client_live_reason: str = betterproto.string_field(21)
    action_duration: int = betterproto.int64_field(22)
    user_share_type: str = betterproto.string_field(23)


@dataclass(eq=False, repr=False)
class WebcastMemberMessageEffectConfig(betterproto.Message):
    type: int = betterproto.int64_field(1)
    icon: "Image" = betterproto.message_field(2)
    avatar_pos: int = betterproto.int64_field(3)
    text: "Text" = betterproto.message_field(4)
    text_icon: "Image" = betterproto.message_field(5)
    stay_time: int = betterproto.int32_field(6)
    anim_asset_id: int = betterproto.int64_field(7)
    badge: "Image" = betterproto.message_field(8)
    flex_setting_array_list: List[int] = betterproto.int64_field(9)


@dataclass(eq=False, repr=False)
class WebcastPollMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    message_type: "MessageType" = betterproto.enum_field(2)
    poll_id: int = betterproto.int64_field(3)
    start_content: "PollStartContent" = betterproto.message_field(4)
    end_content: "PollEndContent" = betterproto.message_field(5)
    update_content: "PollUpdateVotesContent" = betterproto.message_field(6)
    poll_kind: int = betterproto.int32_field(7)


@dataclass(eq=False, repr=False)
class WebcastQuestionNewMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    details: "WebcastQuestionNewMessageQuestionDetails" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastQuestionNewMessageQuestionDetails(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    text: str = betterproto.string_field(2)
    time_stamp: int = betterproto.uint64_field(4)
    user: "User" = betterproto.message_field(5)
    data1: int = betterproto.uint32_field(20)


@dataclass(eq=False, repr=False)
class WebcastRankTextMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    scene: int = betterproto.int32_field(2)
    owner_idx_before_update: int = betterproto.int64_field(3)
    owner_idx_after_update: int = betterproto.int64_field(4)
    self_get_badge_msg: "Text" = betterproto.message_field(5)
    other_get_badge_msg: "Text" = betterproto.message_field(6)
    cur_user_id: int = betterproto.int64_field(7)


@dataclass(eq=False, repr=False)
class WebcastHourlyRankMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    data: "WebcastHourlyRankMessageRankContainer" = betterproto.message_field(2)
    data2: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WebcastHourlyRankMessageRankContainer(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    rankingdata: "WebcastHourlyRankMessageRankContainerRankingData" = (
        betterproto.message_field(2)
    )
    data2: int = betterproto.uint32_field(3)
    rankings: "Ranking" = betterproto.message_field(4)
    rankingdata2: "WebcastHourlyRankMessageRankContainerRankingData2" = (
        betterproto.message_field(5)
    )
    data3: int = betterproto.uint32_field(6)
    data4: int = betterproto.uint32_field(7)


@dataclass(eq=False, repr=False)
class WebcastHourlyRankMessageRankContainerRankingData(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    rankdata: "Ranking" = betterproto.message_field(2)
    data2: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class WebcastHourlyRankMessageRankContainerRankingData2(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    data2: int = betterproto.uint32_field(2)
    rankdata: "Ranking" = betterproto.message_field(3)
    data3: str = betterproto.string_field(4)
    data4: int = betterproto.uint32_field(5)
    data5: int = betterproto.uint32_field(6)


@dataclass(eq=False, repr=False)
class WebcastLinkMicArmies(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    id: int = betterproto.uint64_field(2)
    battle_items: List["LinkMicArmiesItems"] = betterproto.message_field(3)
    id2: int = betterproto.uint64_field(4)
    time_stamp1: int = betterproto.uint64_field(5)
    time_stamp2: int = betterproto.uint64_field(6)
    battle_status: "LinkMicBattleStatus" = betterproto.enum_field(7)
    data1: int = betterproto.uint64_field(8)
    data2: int = betterproto.uint64_field(9)
    data3: int = betterproto.uint32_field(10)
    image: "Image" = betterproto.message_field(11)
    data4: int = betterproto.uint32_field(12)
    data5: int = betterproto.uint32_field(13)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattlePunishFinish(betterproto.Message):
    header: "Common" = betterproto.message_field(1)
    id1: int = betterproto.uint64_field(2)
    timestamp: int = betterproto.uint64_field(3)
    data4: int = betterproto.uint32_field(4)
    id2: int = betterproto.uint64_field(5)
    data6: "WebcastLinkMicBattlePunishFinishLinkMicBattlePunishFinishData" = (
        betterproto.message_field(6)
    )


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattlePunishFinishLinkMicBattlePunishFinishData(
    betterproto.Message
):
    id2: int = betterproto.uint64_field(1)
    timestamp: int = betterproto.uint64_field(2)
    data3: int = betterproto.uint32_field(3)
    id1: int = betterproto.uint64_field(4)
    data5: int = betterproto.uint32_field(5)
    data6: int = betterproto.uint32_field(6)
    data8: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WebcastLinkmicBattleTaskMessage(betterproto.Message):
    header: "Common" = betterproto.message_field(1)
    data2: int = betterproto.uint32_field(2)
    data3: "WebcastLinkmicBattleTaskMessageLinkmicBattleTaskData" = (
        betterproto.message_field(3)
    )
    data5: "WebcastLinkmicBattleTaskMessageLinkmicBattleTaskData2" = (
        betterproto.message_field(5)
    )


@dataclass(eq=False, repr=False)
class WebcastLinkmicBattleTaskMessageLinkmicBattleTaskData(betterproto.Message):
    data1: "WebcastLinkmicBattleTaskMessageBattleTaskData" = betterproto.message_field(
        1
    )


@dataclass(eq=False, repr=False)
class WebcastLinkmicBattleTaskMessageBattleTaskData(betterproto.Message):
    data1: int = betterproto.uint32_field(1)


@dataclass(eq=False, repr=False)
class WebcastLinkmicBattleTaskMessageLinkmicBattleTaskData2(betterproto.Message):
    data1: int = betterproto.uint32_field(1)
    data2: int = betterproto.uint32_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattle(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    id: int = betterproto.uint64_field(2)
    battle_config: "WebcastLinkMicBattleLinkMicBattleConfig" = (
        betterproto.message_field(3)
    )
    battle_status: "LinkMicBattleStatus" = betterproto.enum_field(4)
    details: List["WebcastLinkMicBattleLinkMicBattleDetails"] = (
        betterproto.message_field(5)
    )
    viewer_team: List["WebcastLinkMicBattleLinkMicBattleTopViewers"] = (
        betterproto.message_field(9)
    )
    host_team: List["WebcastLinkMicBattleLinkMicBattleHost"] = (
        betterproto.message_field(10)
    )
    team_data: List["WebcastLinkMicBattleLinkMicBattleTeamData"] = (
        betterproto.message_field(13)
    )
    unknown_data16: int = betterproto.uint64_field(16)
    host_data2_v2: List["WebcastLinkMicBattleHost2V2Data"] = betterproto.message_field(
        17
    )


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleHost2V2Data(betterproto.Message):
    team_number: int = betterproto.uint32_field(1)
    hostdata: List["WebcastLinkMicBattleHost2V2DataHostData"] = (
        betterproto.message_field(2)
    )
    unknown_data3: int = betterproto.uint32_field(3)
    total_points: int = betterproto.uint32_field(4)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleHost2V2DataHostData(betterproto.Message):
    host_id: int = betterproto.uint64_field(1)
    points: int = betterproto.uint32_field(2)
    host_id_str: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleConfig(betterproto.Message):
    id1: int = betterproto.uint64_field(1)
    timestamp: int = betterproto.uint64_field(2)
    data1: int = betterproto.uint32_field(3)
    id2: int = betterproto.uint64_field(4)
    data2: int = betterproto.uint32_field(5)
    data3: int = betterproto.uint32_field(6)
    data4: int = betterproto.uint32_field(8)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleTeamData(betterproto.Message):
    team_id: int = betterproto.uint64_field(1)
    data: "WebcastLinkMicBattleLinkMicBattleData" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleData(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    data1: int = betterproto.uint32_field(2)
    win_streak: int = betterproto.uint32_field(3)
    data3: int = betterproto.uint32_field(5)
    url: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleDetails(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    summary: "WebcastLinkMicBattleLinkMicBattleDetailsLinkMicBattleDetailsSummary" = (
        betterproto.message_field(2)
    )


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleDetailsLinkMicBattleDetailsSummary(
    betterproto.Message
):
    id: int = betterproto.uint64_field(1)
    unknown_data2: int = betterproto.uint32_field(2)
    points: int = betterproto.uint32_field(3)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleTopViewers(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    viewer_group: List["WebcastLinkMicBattleLinkMicBattleTopViewersTopViewerGroup"] = (
        betterproto.message_field(2)
    )


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleTopViewersTopViewerGroup(betterproto.Message):
    viewer: List[
        "WebcastLinkMicBattleLinkMicBattleTopViewersTopViewerGroupTopViewer"
    ] = betterproto.message_field(1)
    points: int = betterproto.uint32_field(2)
    host_id_or_team_num: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleTopViewersTopViewerGroupTopViewer(
    betterproto.Message
):
    id: int = betterproto.uint64_field(1)
    points: int = betterproto.uint32_field(2)
    profile_id: str = betterproto.string_field(3)
    images: List["Image"] = betterproto.message_field(4)
    string_id: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleHost(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    host_group: List["WebcastLinkMicBattleLinkMicBattleHostHostGroup"] = (
        betterproto.message_field(2)
    )


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleHostHostGroup(betterproto.Message):
    host: List["WebcastLinkMicBattleLinkMicBattleHostHostGroupHost"] = (
        betterproto.message_field(1)
    )
    points: int = betterproto.uint32_field(2)
    host_id: str = betterproto.string_field(3)


@dataclass(eq=False, repr=False)
class WebcastLinkMicBattleLinkMicBattleHostHostGroupHost(betterproto.Message):
    id: int = betterproto.uint64_field(1)
    profile_id: str = betterproto.string_field(2)
    images: List["Image"] = betterproto.message_field(3)
    name: str = betterproto.string_field(4)


@dataclass(eq=False, repr=False)
class WebcastLinkMicFanTicketMethod(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    fan_ticket_room_notice: "FanTicketRoomNoticeContent" = betterproto.message_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMicMethod(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    message_type: "MessageType" = betterproto.enum_field(2)
    access_key: str = betterproto.string_field(3)
    anchor_linkmic_id: int = betterproto.int64_field(4)
    user_id: int = betterproto.int64_field(5)
    fan_ticket: int = betterproto.int64_field(6)
    total_link_mic_fan_ticket: int = betterproto.int64_field(7)
    channel_id: int = betterproto.int64_field(8)
    layout: int = betterproto.int64_field(9)
    vendor: int = betterproto.int64_field(10)
    dimension: int = betterproto.int64_field(11)
    theme: str = betterproto.string_field(12)
    invite_uid: int = betterproto.int64_field(13)


@dataclass(eq=False, repr=False)
class WebcastLiveIntroMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    room_id: int = betterproto.int64_field(2)
    audit_status: "AuditStatus" = betterproto.enum_field(3)
    content: str = betterproto.string_field(4)
    host: "User" = betterproto.message_field(5)
    intro_mode: int = betterproto.int32_field(6)
    badges: List["BadgeStruct"] = betterproto.message_field(7)
    language: str = betterproto.string_field(8)


@dataclass(eq=False, repr=False)
class WebcastUnauthorizedMemberMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    action: int = betterproto.int32_field(2)
    nick_name_prefix: "Text" = betterproto.message_field(3)
    nick_name: str = betterproto.string_field(4)
    enter_text: "Text" = betterproto.message_field(5)


@dataclass(eq=False, repr=False)
class WebcastMsgDetectMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    detect_type: int = betterproto.int32_field(2)
    trigger_condition: "WebcastMsgDetectMessageTriggerCondition" = (
        betterproto.message_field(3)
    )
    time_info: "WebcastMsgDetectMessageTimeInfo" = betterproto.message_field(4)
    trigger_by: int = betterproto.int32_field(5)
    from_region: str = betterproto.string_field(6)


@dataclass(eq=False, repr=False)
class WebcastMsgDetectMessageTimeInfo(betterproto.Message):
    client_start_ms: int = betterproto.int64_field(1)
    api_recv_time_ms: int = betterproto.int64_field(2)
    api_send_to_goim_ms: int = betterproto.int64_field(3)


@dataclass(eq=False, repr=False)
class WebcastMsgDetectMessageTriggerCondition(betterproto.Message):
    uplink_detect_http: bool = betterproto.bool_field(1)
    uplink_detect_web_socket: bool = betterproto.bool_field(2)
    detect_p2_p_msg: bool = betterproto.bool_field(3)
    detect_room_msg: bool = betterproto.bool_field(4)
    http_optimize: bool = betterproto.bool_field(5)


@dataclass(eq=False, repr=False)
class WebcastOecLiveShoppingMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    data1: int = betterproto.uint32_field(2)
    shop_data: "WebcastOecLiveShoppingMessageLiveShoppingData" = (
        betterproto.message_field(4)
    )
    shop_timings: "TimeStampContainer" = betterproto.message_field(5)
    details: "WebcastOecLiveShoppingMessageLiveShoppingDetails" = (
        betterproto.message_field(9)
    )


@dataclass(eq=False, repr=False)
class WebcastOecLiveShoppingMessageLiveShoppingData(betterproto.Message):
    title: str = betterproto.string_field(1)
    price_string: str = betterproto.string_field(2)
    image_url: str = betterproto.string_field(3)
    shop_url: str = betterproto.string_field(4)
    data1: int = betterproto.uint64_field(6)
    shop_name: str = betterproto.string_field(7)
    data2: int = betterproto.uint64_field(8)
    shop_url2: str = betterproto.string_field(9)
    data3: int = betterproto.uint64_field(10)
    data4: int = betterproto.uint64_field(11)


@dataclass(eq=False, repr=False)
class WebcastOecLiveShoppingMessageLiveShoppingDetails(betterproto.Message):
    id1: str = betterproto.string_field(1)
    data1: str = betterproto.string_field(3)
    data2: int = betterproto.uint32_field(4)
    timestamp: int = betterproto.uint64_field(5)
    data: "ValueLabel" = betterproto.message_field(6)


@dataclass(eq=False, repr=False)
class WebcastRoomPinMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    pinned_message: bytes = betterproto.bytes_field(2)
    original_msg_type: str = betterproto.string_field(30)
    timestamp: int = betterproto.uint64_field(31)


@dataclass(eq=False, repr=False)
class WebcastSystemMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    message: str = betterproto.string_field(2)


@dataclass(eq=False, repr=False)
class WebcastLinkMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    message_type: "LinkMessageType" = betterproto.enum_field(2)
    linker_id: int = betterproto.int64_field(3)
    scene: "Scene" = betterproto.enum_field(4)
    invite_content: "LinkerInviteContent" = betterproto.message_field(5)
    reply_content: "LinkerReplyContent" = betterproto.message_field(6)
    create_content: "LinkerCreateContent" = betterproto.message_field(7)
    close_content: "LinkerCloseContent" = betterproto.message_field(8)
    enter_content: "LinkerEnterContent" = betterproto.message_field(9)
    leave_content: "LinkerLeaveContent" = betterproto.message_field(10)
    cancel_content: "LinkerCancelContent" = betterproto.message_field(11)
    kick_out_content: "LinkerKickOutContent" = betterproto.message_field(12)
    linked_list_change_content: "LinkerLinkedListChangeContent" = (
        betterproto.message_field(13)
    )
    update_user_content: "LinkerUpdateUserContent" = betterproto.message_field(14)
    waiting_list_change_content: "LinkerWaitingListChangeContent" = (
        betterproto.message_field(15)
    )
    mute_content: "LinkerMuteContent" = betterproto.message_field(16)
    random_match_content: "LinkerRandomMatchContent" = betterproto.message_field(17)
    update_user_setting_content: "LinkerUpdateUserSettingContent" = (
        betterproto.message_field(18)
    )
    mic_idx_update_content: "LinkerMicIdxUpdateContent" = betterproto.message_field(19)
    list_change_content: "LinkerListChangeContent" = betterproto.message_field(20)
    cohost_list_change_content: "CohostListChangeContent" = betterproto.message_field(
        21
    )
    media_change_content: "LinkerMediaChangeContent" = betterproto.message_field(22)
    accept_notice_content: "LinkerAcceptNoticeContent" = betterproto.message_field(23)
    sys_kick_out_content: "LinkerSysKickOutContent" = betterproto.message_field(101)
    user_toast_content: "LinkmicUserToastContent" = betterproto.message_field(102)
    extra: str = betterproto.string_field(200)
    expire_timestamp: int = betterproto.int64_field(201)
    transfer_extra: str = betterproto.string_field(202)


@dataclass(eq=False, repr=False)
class WebcastLinkLayerMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    message_type: "MessageType" = betterproto.enum_field(2)
    channel_id: int = betterproto.int64_field(3)
    scene: "Scene" = betterproto.enum_field(4)
    create_channel_content: "CreateChannelContent" = betterproto.message_field(100)
    list_change_content: "ListChangeContent" = betterproto.message_field(102)
    invite_content: "InviteContent" = betterproto.message_field(103)
    apply_content: "ApplyContent" = betterproto.message_field(104)
    permit_apply_content: "PermitApplyContent" = betterproto.message_field(105)
    reply_invite_content: "ReplyInviteContent" = betterproto.message_field(106)
    kick_out_content: "KickOutContent" = betterproto.message_field(107)
    cancel_apply_content: "CancelApplyContent" = betterproto.message_field(108)
    cancel_invite_content: "CancelInviteContent" = betterproto.message_field(109)
    leave_content: "LeaveContent" = betterproto.message_field(110)
    finish_content: "FinishChannelContent" = betterproto.message_field(111)
    join_direct_content: "JoinDirectContent" = betterproto.message_field(112)
    join_group_content: "JoinGroupContent" = betterproto.message_field(113)
    permit_group_content: "PermitJoinGroupContent" = betterproto.message_field(114)
    cancel_group_content: "CancelJoinGroupContent" = betterproto.message_field(115)
    leave_group_content: "LeaveJoinGroupContent" = betterproto.message_field(116)
    p2_p_group_change_content: "P2PGroupChangeContent" = betterproto.message_field(117)
    business_content: "BusinessContent" = betterproto.message_field(200)


@dataclass(eq=False, repr=False)
class RoomVerifyMessage(betterproto.Message):
    common: "Common" = betterproto.message_field(1)
    action: int = betterproto.int32_field(2)
    content: str = betterproto.string_field(3)
    notice_type: int = betterproto.int64_field(4)
    close_room: bool = betterproto.bool_field(5)
